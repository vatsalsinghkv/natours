.btn {
	// <button> too
	&,
	&:link,
	&:visited {
		display: inline-block;
		text-transform: uppercase;
		text-decoration: none;

		padding: 1.5rem 4rem;
		border-radius: 10rem;
		position: relative;

		transition: all 0.2s;
		border: none;
		cursor: pointer;
	}

	&:hover {
		@include btnShadow(1rem, 2rem, -3px);

		&::after {
			transform: scaleX(1.4) scaleY(1.6);
			opacity: 0;
		}
	}

	&:active,
	&:focus {
		outline: none;
		@include btnShadow(0.5rem, 1rem, -1px);
	}

	&::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;

		border-radius: 10rem;
		z-index: -1;

		transition: all 0.4s;
	}

	// ELEMENTS
	// Buttons
	&--white {
		color: $color-text;
		background-color: $color-white;

		// .btn and .btn-white is same el so ::after is also same
		&::after {
			background-color: $color-white;
		}
	}

	&--primary {
		color: $color-white;
		background-color: $color-primary;

		&::after {
			background-color: $color-primary;
		}
	}

	// Button Animation
	&--animated {
		animation: moveInBottom 0.5s ease-out 0.75s;

		// The animation-fill-mode CSS property sets how a CSS animation applies styles to its target before and after its execution.

		// The animation will apply the values defined in the first relevant keyframe as soon as it is applied to the target, and retain this during the animation-delay period

		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		display: inline-block;
		color: $color-primary;

		text-decoration: none;
		border-bottom: 1px solid $color-primary;

		padding: 3px;
		transition: all 0.2s;
	}

	&:hover, &:focus {
		outline: none;
		color: $color-white;
		background-color: $color-primary;
		@include btnShadow(1rem, 2rem, -2px, 0.15);
	}

	&:active {
		@include btnShadow(0.5rem, 1rem, 0px, 0.15);
	}
}
